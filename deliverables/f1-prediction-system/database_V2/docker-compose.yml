# version: '3.8'

# services:
#   timescaledb:
#     build: .
#     container_name: racing_timescaledb
#     environment:
#       POSTGRES_DB: racing_telemetry
#       POSTGRES_USER: racing_user
#       POSTGRES_PASSWORD: racing_password
#       TIMESCALEDB_TELEMETRY: off
#     ports:
#       - "5432:5432"
#     volumes:
#       - timescale_data:/var/lib/postgresql/data
#       - ./logs:/var/log/postgresql
#     networks:
#       - racing_network
#     restart: unless-stopped
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U racing_user -d racing_telemetry"]
#       interval: 30s
#       timeout: 10s
#       retries: 3

#   pgadmin:
#     image: dpage/pgadmin4:latest
#     container_name: racing_pgadmin
#     environment:
#       PGADMIN_DEFAULT_EMAIL: admin@racing.com
#       PGADMIN_DEFAULT_PASSWORD: admin123
#     ports:
#       - "8080:80"
#     volumes:
#       - pgadmin_data:/var/lib/pgadmin
#     networks:
#       - racing_network
#     depends_on:
#       timescaledb:
#         condition: service_healthy

#   grafana:
#     image: grafana/grafana:latest
#     container_name: racing_grafana
#     environment:
#       GF_SECURITY_ADMIN_PASSWORD: admin123
#     ports:
#       - "3000:3000"
#     volumes:
#       - grafana_data:/var/lib/grafana
#       - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
#     networks:
#       - racing_network
#     depends_on:
#       timescaledb:
#         condition: service_healthy

#   redis:
#     image: redis:7-alpine
#     container_name: racing_redis
#     ports:
#       - "6379:6379"
#     volumes:
#       - redis_data:/data
#     networks:
#       - racing_network
#     command: redis-server --appendonly yes

# volumes:
#   timescale_data:
#   pgadmin_data:
#   grafana_data:
#   redis_data:

# networks:
#   racing_network:
#     driver: bridge


version: '3.8'

services:
  etl-pipeline:
    build: .
    container_name: f1-etl-pipeline
    environment:
      - DB_TYPE=sqlite
      - DB_NAME=f1_data.db
      - ETL_SCHEDULE=daily
      - CACHE_RETENTION_DAYS=7
    volumes:
      - ./database/data:/app/database/data
      - ./logs:/app/logs
    restart: unless-stopped
    
  # Optional: Add PostgreSQL for production
  postgres:
    image: postgres:13
    container_name: f1-postgres
    environment:
      POSTGRES_DB: f1_data
      POSTGRES_USER: f1_user
      POSTGRES_PASSWORD: f1_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped

volumes:
  postgres_data:

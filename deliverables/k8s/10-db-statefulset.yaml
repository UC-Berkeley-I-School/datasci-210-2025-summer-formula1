apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: f1
spec:
  clusterIP: None
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
  selector:
    app: db

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: db
  namespace: f1
spec:
  serviceName: db
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: db
          image: 590184119443.dkr.ecr.us-east-1.amazonaws.com/f1/database:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef: { name: model-service-config, key: POSTGRES_DB }
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef: { name: model-service-config, key: POSTGRES_USER }
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef: { name: db-secrets, key: POSTGRES_PASSWORD }
          readinessProbe:
            exec:
              command: ["sh", "-c", "pg_isready -U f1_user -d f1_telemetry"]
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            exec:
              command: ["sh", "-c", "pg_isready -U f1_user -d f1_telemetry"]
            initialDelaySeconds: 30
            periodSeconds: 10
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 20Gi

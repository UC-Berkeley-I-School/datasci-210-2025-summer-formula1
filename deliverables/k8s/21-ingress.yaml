apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: f1-ingress
  namespace: f1
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-http01
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "120"
spec:
  tls:
    - hosts: ["f1capstone.com"]
      secretName: tls-f1capstone-com
  rules:
    - host: f1capstone.com
      http:
        paths:
          # Most specific Monte Carlo API routes first
          - path: /api/monte-carlo-data
            pathType: Prefix
            backend:
              service: { name: monte-carlo-sim, port: { number: 8001 } }
          - path: /api/driver-performance
            pathType: Prefix
            backend:
              service: { name: monte-carlo-sim, port: { number: 8001 } }
          - path: /api/safety-car-prediction
            pathType: Prefix
            backend:
              service: { name: monte-carlo-sim, port: { number: 8001 } }
          # Generic API routes (must come after specific API routes)
          - path: /api
            pathType: Prefix
            backend:
              service: { name: model-service, port: { number: 8000 } }
          # Monte Carlo specific routes
          - path: /monte-carlo
            pathType: Prefix
            backend:
              service: { name: monte-carlo-sim, port: { number: 8001 } }
          - path: /dashboard
            pathType: Prefix
            backend:
              service: { name: monte-carlo-sim, port: { number: 8001 } }
          - path: /docs
            pathType: Prefix
            backend:
              service: { name: monte-carlo-sim, port: { number: 8001 } }
          - path: /health
            pathType: Prefix
            backend:
              service: { name: monte-carlo-sim, port: { number: 8001 } }
          # Main webapp (fallback - must be last)
          - path: /
            pathType: Prefix
            backend:
              service: { name: webapp, port: { number: 5000 } }
